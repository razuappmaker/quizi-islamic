import 'package:flutter/material.dart';

class DeveloperPage extends StatelessWidget {
  DeveloperPage({Key? key}) : super(key: key);

  final String developerName = '‡¶Æ‡ßã‡¶É ‡¶∞‡¶æ‡¶ú‡ßÅ ‡¶π‡ßã‡¶∏‡ßá‡¶®';
  final String experience =
      '‡ßß‡ß¶ ‡¶¨‡¶õ‡¶∞ ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ\n(‡¶´‡ßç‡¶≤‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶∏ ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶æ‡¶∞ ‡¶ì IT ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡¶æ‡¶∞‡ßç‡¶ü)';

  final String aboutDeveloper = '''
üë®‚Äçüíª ‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ï‡¶ú‡¶® ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û Flutter ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç IT ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡¶æ‡¶∞‡ßç‡¶ü ‡•§
üì± ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶ì üíª ‡¶ì‡ßü‡ßá‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá ‡¶¶‡ßÄ‡¶∞‡ßç‡¶ò‡¶¶‡¶ø‡¶® ‡¶ß‡¶∞‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶õ‡¶ø‡•§


üéØ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Ø ‡¶π‡¶≤‡ßã ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶Æ‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ ‡¶π‡¶¨‡ßá ‡¶∏‡¶π‡¶ú, ‡¶Ü‡¶ï‡¶∞‡ßç‡¶∑‡¶£‡ßÄ‡ßü ‡¶è‡¶¨‡¶Ç ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶∞‡ßÄ‡•§


‚ú® ‡¶Æ‡ßÇ‡¶≤ ‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø‡¶∏‡¶Æ‡ßÇ‡¶π:
üîπ ‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶ì ‡¶Ü‡¶ï‡¶∞‡ßç‡¶∑‡¶£‡ßÄ‡ßü ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®
üîπ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶¨‡¶æ‡¶®‡ßç‡¶ß‡¶¨ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶´‡ßá‡¶∏
üîπ ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶ì ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏


‚ú® ‡¶Ü‡¶Æ‡¶ø ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏ ‡¶ï‡¶∞‡¶ø, ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑‡ßá‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡¶ï‡ßá ‡¶∏‡¶π‡¶ú ‡¶ì ‡¶∏‡¶Æ‡ßÉ‡¶¶‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡•§
''';

  final List<String> apps = [
    '‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™',
    '‡¶ú‡¶æ‡¶ï‡¶æ‡¶§ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßÅ‡¶≤‡ßá‡¶ü‡¶∞',
    '‡¶™‡ßç‡¶∞‡¶¨‡¶æ‡¶∏‡ßÄ‡¶∞ ‡¶ï‡¶∑‡ßç‡¶ü SMS',
    '‡¶á ‡¶ï‡¶Æ‡¶æ‡¶∞‡ßç‡¶∏',
    '‡¶ì‡ßü‡ßá‡¶¨ ‡¶≠‡¶ø‡¶â ‡¶Ü‡¶™‡¶∏',
    'Recipe Book App',
  ];

  @override
  Widget build(BuildContext context) {
    // ‡¶è‡¶ñ‡¶® ‡¶•‡¶ø‡¶Æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßã
    final isDark = Theme.of(context).brightness == Brightness.dark;

    // light mode ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ó‡ßç‡¶∞‡ßá‡¶°‡¶ø‡ßü‡ßá‡¶®‡ßç‡¶ü
    final Color backgroundStart = Colors.green.shade900;
    final Color backgroundEnd = Colors.green.shade600;

    // text color ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ
    final Color headingColor = isDark ? Colors.white : Colors.white;
    final Color subHeadingColor = isDark ? Colors.white70 : Colors.white70;
    final Color bodyColor = isDark ? Colors.white70 : Colors.white70;

    return Scaffold(
      appBar: AppBar(
        title: const Text('‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶æ‡¶∞'),
        backgroundColor: isDark ? Colors.black : Colors.green.shade900,
        centerTitle: true,
        elevation: 4,
      ),
      body: Container(
        decoration: isDark
            ? const BoxDecoration(
          color: Colors.black, // Dark mode ‡¶è ‡¶∂‡ßÅ‡¶ß‡ßÅ solid ‡¶ï‡¶æ‡¶≤‡ßã ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶°
        )
            : BoxDecoration(
          gradient: LinearGradient(
            colors: [backgroundStart, backgroundEnd],
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
          ),
        ),
        padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 30),
        child: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              CircleAvatar(
                radius: 70,
                backgroundImage: const AssetImage('assets/images/razu.jpg'),
                backgroundColor: isDark ? Colors.grey[800] : Colors.white24,
              ),
              const SizedBox(height: 20),
              Text(
                developerName,
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                  color: headingColor,
                ),
              ),
              const SizedBox(height: 8),
              Text(
                experience,
                style: TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                  color: subHeadingColor,
                ),
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 20),
              Text(
                aboutDeveloper,
                style: TextStyle(
                  fontSize: 18,
                  color: bodyColor,
                  height: 1.4,
                ),
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 30),
              Divider(
                color: isDark ? Colors.white24 : Colors.white54,
                thickness: 1.2,
              ),
              const SizedBox(height: 25),
              Align(
                alignment: Alignment.centerLeft,
                child: Text(
                  '‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶∏',
                  style: TextStyle(
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                    color: headingColor,
                  ),
                ),
              ),
              const SizedBox(height: 20),
              Column(
                children: apps.map((appName) {
                  return Card(
                    color: isDark ? Colors.grey[850] : Colors.white24,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(16),
                    ),
                    elevation: 6,
                    margin: const EdgeInsets.symmetric(vertical: 8),
                    child: ListTile(
                      leading: Icon(Icons.apps,
                          color: isDark ? Colors.green : Colors.white),
                      title: Text(
                        appName,
                        style: TextStyle(
                          fontSize: 18,
                          color: headingColor,
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                      trailing: Icon(Icons.chevron_right,
                          color: isDark ? Colors.white54 : Colors.white70),
                      onTap: () {
                        // ‡¶®‡ßá‡¶≠‡¶ø‡¶ó‡ßá‡¶∂‡¶®
                      },
                    ),
                  );
                }).toList(),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
